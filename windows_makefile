
INCLUDE_DIR= -I"C:\allegro-5.1.8-msvc-12.0\include" -I"C:\Program Files\Microsoft Visual Studio 12.0\VC\include" -I"C:\Boost\include\boost-1_57"
ARCHITECTURE=$(shell uname -m | sed 's@x86_64@64@' | sed 's@i686@32@')
CC="C:\Program Files\Microsoft Visual Studio 12.0\VC\bin\cl.exe"
CFLAGS= -std=c++11 -ftemplate-depth=1024 -pedantic -Wall /O2 $(INCLUDE_DIR)	#-lprofiler
LDFLAGS=/link /libpath:"c:\allegro-5.1.8-msvc-12.0\lib" /libpath:"c:\Program Files\Microsoft Visual Studio 12.0\VC\lib" /libpath:"C:\Boost\lib" /libpath:"c:\Program Files\Windows Kits\8.1\Lib\winv6.3\um\x86" 
#/libpath:"C:\Allegro\allegro-5.0.10-msvc-12.0\lib"
BINARY_NAME=citadel_$(shell $(shell pwd)/citadel.out -v)_$(ARCHITECTURE)bit
#allegro headers are in /usr/include/allegro5

all: ai.o building.o button.o game_functions.o loop.o main.o map_generator.o mouse.o object.o others.o parsing.o pathfinding.o people.o session.o tile.o window.o
	$(CC) ai.obj building.obj button.obj game_functions.obj loop.obj main.obj map_generator.obj mouse.obj object.obj others.obj parsing.obj pathfinding.obj people.obj session.obj window.obj tile.obj $(LDFLAGS) allegro-5.1.8-monolith-md.lib
				
#-lallegro_acodec -lallegro_audio -lallegro_color -lallegro_dialog -lallegro_font -lallegro_ttf -lallegro_image -lallegro_primitives -lallegro_main -lallegro -lboost_iostreams -lboost_serialization -lboost_system -lboost_filesystem -ldumb -lopenal -ljpeg -lpng12 -lbz2
	
binaries: ai.o building.o button.o game_functions.o loop.o main.o map_generator.o mouse.o object.o others.o parsing.o pathfinding.o people.o session.o tile.o window.o 
	$(CC) ai.o building.o button.o game_functions.o loop.o main.o map_generator.o mouse.o object.o others.o parsing.o pathfinding.o people.o session.o window.o tile.o $(LDFLAGS) -lallegro_acodec -lallegro_audio -lallegro_color -lallegro_dialog -lallegro_font -lallegro_ttf -lallegro_image -lallegro_primitives -lallegro_main -lallegro -lboost_iostreams -lboost_serialization -lboost_system -lboost_filesystem -o citadel.out
	cp citadel.out $(BINARY_NAME).out
	zip -r $(BINARY_NAME).zip $(BINARY_NAME).out data lib$(ARCHITECTURE)
	echo -e "\n Don't forget VERSION"

ai.o: ai.cpp $(HEADERS)
	$(CC) $(CFLAGS) -c ai.cpp -o ai.o
		
building.o: building.cpp $(HEADERS)
	$(CC) $(CFLAGS) -c building.cpp -o building.o
 
button.o: button.cpp $(HEADERS)
	$(CC) $(CFLAGS) -c button.cpp -o button.o
 
game_functions.o: game_functions.cpp $(HEADERS)
	$(CC) $(CFLAGS) -c game_functions.cpp

loop.o: loop.cpp $(HEADERS)
	$(CC) $(CFLAGS) -c loop.cpp

main.o: main.cpp $(HEADERS)
	$(CC) $(CFLAGS) -c main.cpp
	
map_generator.o: map_generator.cpp $(HEADERS)
	$(CC) $(CFLAGS) -c map_generator.cpp
	
mouse.o: mouse.cpp $(HEADERS)
	$(CC) $(CFLAGS) -c mouse.cpp
 
object.o: object.cpp $(HEADERS)
	$(CC) $(CFLAGS) -c object.cpp
 
others.o: others.cpp $(HEADERS)
	$(CC) $(CFLAGS) -c others.cpp
 
parsing.o: parsing.cpp $(HEADERS)
	$(CC) $(CFLAGS) -c parsing.cpp

pathfinding.o: pathfinding.cpp $(HEADERS)
	$(CC) $(CFLAGS) -c pathfinding.cpp

people.o: people.cpp $(HEADERS)
	$(CC) $(CFLAGS) -c people.cpp
  
session.o: session.cpp $(HEADERS)
	$(CC) $(CFLAGS) -c session.cpp

tile.o: tile.cpp $(HEADERS)
	$(CC) $(CFLAGS) -c tile.cpp

window.o: window.cpp $(HEADERS)
	$(CC) $(CFLAGS) -c window.cpp

clean:
	rm *.o a.out

